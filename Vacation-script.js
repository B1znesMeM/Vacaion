document.querySelector('#body');

// CheckRooms();

// const myPromis = new Promise(function(resolve, reject) {
//     console.log('Promise created');
//     setTimeout(() => {
//         const response = true;

//         if(response){

//             let massege = 'SUCCESS';
//             resolve(massege);

//         }
//         else {

//             let massege = 'Failed'
//             reject(massege);

//         }
//     }, 1000)
// });

//     myPromis.then(function(data) {

//         console.log('Then');
//         console.log(data);

//     }).catch(function(data){

//         console.log('Catch');
//         console.log(data);

//     })



CheckRooms()
.then(checkTickets)
.then(succes)
.catch(failed);

function CheckRooms(){
    return new Promise(function(resolve, reject) {
        setTimeout(() => {
            console.log("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ –≤ –æ—Ç–µ–ª–µ üì¢");
            const availableRooms = true;
            console.log(availableRooms);
    
            if(availableRooms) {
                resolve("–ù–æ–º–µ—Ä–∞ –µ—Å—Ç—å! :)");
            }
            else {
                reject("–ù–æ–º–µ—Ä–æ–≤ –Ω–µ—Ç. :(");
            }
        }, 1500)
    })
}

function checkTickets(data) {
    return new Promise(function(resolve, reject) {
        setTimeout(() => {
            console.log(data);
            console.log("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã... ‚úà");
            const availableTickets = true;

            if(availableTickets) {
                let massege = "–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã –µ—Å—Ç—å! :)";
                resolve(massege);
            }
            else {
                let massege = "–ê–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤ –Ω–µ—Ç—É. :(";
                reject(massege);
            }
        },1000)
    });
}

function succes(data) {
    console.log("--- Then 2 ---");
    console.log(data);
    console.log("–ï–¥–µ–º –≤ –æ—Ç–ø—É—Å–∫ üì¢:)")
}

function failed(data) {
    console.log("--- Catch ---");
    console.log(data);
    console.log("–û—Ç–ø—É—Å–∫ –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è üò¢")
}